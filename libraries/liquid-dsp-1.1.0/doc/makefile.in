# Copyright (c) 2007, 2008, 2009, 2010 Joseph Gaeddert
# Copyright (c) 2007, 2008, 2009, 2010 Virginia Polytechnic
#                                      Institute & State University
#
# This file is part of liquid.
#
# liquid is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# liquid is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with liquid.  If not, see <http://www.gnu.org/licenses/>.

#
# Makefile for generating liquid documentation
#
# Includes targets for listings, figures, etc.
#
# Targets:
#    all                 :   liquid.pdf document
#    clean               :   clean .tex files (.aux, .log, etc.)
#    figures             :   create all auto-generated figures
#    listings            :   create all auto-generated listings (.tex)
#    listings-check      :   compile all the listings to ensure code is correct
#
#    mostlyclean         :   full clean of all documentation (figures, listings, libs, etc.)
#    distclean           :   removes everything except the originally distributed files
#    clean-figures       :   clean all figures and generating files
#    clean-listings      :   clean all listings
#

TEX = @PDFLATEX@
TEX_FLAGS = --shell-escape
BIB = @BIBTEX@
BIB_FLAGS =
CC = @CC@
CFLAGS :=
LDFLAGS = @LIBS@
RM = rm -f
MV = mv

EPSTOPDF = @EPSTOPDF@
EPSTOPDF_FLAGS = --compress

GNUPLOT = @GNUPLOT@
GNUPLOT_VERSION = 4.2

PYGMENTIZE = @PYGMENTIZE@
PYGMENTS_VERB_OPTS = -P verboptions='fontsize=\small' -P commandprefix='PY'
PYGMENTS_OPTS = -O linenos=True $(PYGMENTS_VERB_OPTS)
PYGMENTS_STYLE = default

include_dirs	:= . .. include ../include
INCLUDE_CFLAGS	= $(addprefix -I ,$(include_dirs))
CFLAGS		+= $(INCLUDE_CFLAGS) -g -O2 -Wall

# header dependencies
headers		:= include/liquid.doc.h
#		   include/liquid.doc.html.h

# Graphics (nothing to build)
GRAPHICS = 						\
	graphics/liquid_splatter_00.png			\
	graphics/liquid_splatter_01.png			\
	graphics/liquid_splatter_02.png			\
	graphics/liquid_splatter_03.png			\
	graphics/liquid_splatter_04.png			\

# Listings used in this document
LISTINGS_C = 						\
	listings/agc.example.c				\
	listings/ampmodem.example.c			\
	listings/autocorr.example.c			\
	listings/bpacket.example.c			\
	listings/crc.example.c				\
	listings/cvsd.example.c				\
	listings/decim.example.c			\
	listings/dotprod_rrrf.example.c			\
	listings/eqlms_cccf.example.c			\
	listings/eqlms_cccf_blind.example.c		\
	listings/fec.example.c				\
	listings/fft.example.c				\
	listings/fft_dct.example.c			\
	listings/firdes_kaiser.example.c		\
	listings/firdespm.example.c			\
	listings/firfarrow_crcf.example.c		\
	listings/firfilt.example.c			\
	listings/firhilb.example.c			\
	listings/freqmodem.example.c			\
	listings/gasearch.example.c			\
	listings/gmskmodem.example.c			\
	listings/gradsearch.example.c			\
	listings/gport.direct.example.c			\
	listings/gport.indirect.example.c		\
	listings/iirdes.example.c			\
	listings/iirfilt.example.c			\
	listings/interp.example.c			\
	listings/interleaver.example.c			\
	listings/lifecycle.example.c			\
	listings/matrix.example.c			\
	listings/modem.example.c			\
	listings/modem_arb.example.c			\
	listings/msresamp_crcf.example.c		\
	listings/nco.c					\
	listings/nco.example.c				\
	listings/nco_pll.example.c			\
	listings/ofdmflexframegen.example.c		\
	listings/ofdmflexframesync.example.c		\
	listings/pack_array.example.c			\
	listings/packetizer.example.c			\
	listings/qnsearch.example.c			\
	listings/resamp_crcf.example.c			\
	listings/resamp2_crcf.example.c			\
	listings/symsync_crcf.example.c			\
	listings/window.example.c			\
							\
	tutorials/pll_init_tutorial.c			\
	tutorials/pll_basic_tutorial.c			\
	tutorials/pll_tutorial.c			\
							\
	tutorials/fec_tutorial.c			\
	tutorials/fec_init_tutorial.c			\
	tutorials/fec_basic_tutorial.c			\
	tutorials/fec_extra_tutorial.c			\
							\
	tutorials/framing_init_tutorial.c		\
	tutorials/framing_basic_tutorial.c		\
	tutorials/framing_intermediate_tutorial.c	\
	tutorials/framing_tutorial.c			\
							\
	tutorials/ofdmflexframe_init_tutorial.c		\
	tutorials/ofdmflexframe_basic_tutorial.c	\
	tutorials/ofdmflexframe_intermediate_tutorial.c	\
	tutorials/ofdmflexframe_advanced_tutorial.c	\

# Listings used in this document
LISTINGS_CC = 					\
	listings/nco.cc				\

# .tex inputs
SECTIONS :=					\
	sections/introduction.tex		\
	sections/installation.tex		\
	sections/experimental.tex		\
						\
	sections/agc.tex			\
	sections/ann.tex			\
	sections/audio.tex			\
	sections/buffer.tex			\
	sections/channel.tex			\
	sections/dotprod.tex			\
	sections/equalization.tex		\
	sections/fec.tex			\
	sections/fft.tex			\
	sections/filter.tex			\
	sections/framing.tex			\
	sections/math.tex			\
	sections/matrix.tex			\
	sections/modem.tex			\
	sections/multicarrier.tex		\
	sections/nco.tex			\
	sections/optim.tex			\
	sections/quantization.tex		\
	sections/random.tex			\
	sections/sequence.tex			\
	sections/utility.tex			\
	sections/tutorial_pll.tex		\
	sections/tutorial_fec.tex		\
	sections/tutorial_framing.tex		\
	sections/tutorial_ofdmflexframe.tex	\

lib_sources	:=				\
	lib/liquid_doc_compute_psd.c		\
	lib/liquid_doc_estimate_snr.c		\
	lib/liquid_doc_freqz.c			\
	lib/liquid_doc_simulate_per.c		\

#	lib/htmlgen.envparser.c
#	lib/htmlgen.tokenparser.c
#	lib/htmlgen.c

# additional targets to clean
extra_clean :=

all: liquid.pdf

# copy include file from parent directory
libliquid.a : ../libliquid.a
	cp $< $@

extra_clean += libliquid.a


##
## LISTINGS
##

LISTINGS := $(LISTINGS_C) $(LISTINGS_CC)

# 
# listings-check
#

# C, C++ test program objects
listings_ctests  := $(patsubst %.c, %.c.o,  $(LISTINGS_C))
listings_cctests := $(patsubst %.cc,%.cc.o, $(LISTINGS_CC))

# simple script to generate temporary output c program file
scripts/listings_check : % : %.c
	$(CC) -o $@ $<

# compile the objects but don't link/run them
#   temporary program file: listings/filename.prog.c
$(listings_ctests) : %.c.o : %.c scripts/listings_check
	./scripts/listings_check $< $*.prog.c
	$(CC) -I . -I../include/ -c -o $@ $*.prog.c
	$(RM) $*.prog.c

# specific C++ programs
$(listings_cctests) : %.cc.o : %.cc scripts/listings_check
	./scripts/listings_check $< $*.prog.cc
	$(CXX) -I . -I../include/ -c -o $@ $*.prog.cc
	$(RM) $*.prog.cc

# main test: try to build the objects. If the code is incorrect
# then then tests won't build and the 'check' will fail.
listings-check : $(listings_ctests) $(listings_cctests)

# clean up listings-check files
clean-listings-check :
	$(RM) listings/*.prog.c
	$(RM) listings/*.prog.cc
	$(RM) listings/*.o
	$(RM) tutorials/*.prog.c
	$(RM) tutorials/*.prog.cc
	$(RM) tutorials/*.o
	$(RM) scripts/listings_check

# create listings targets (append '.tex' to each input)
listings_c_texfiles  = $(patsubst %,%.tex,$(LISTINGS_C))
listings_cc_texfiles = $(patsubst %,%.tex,$(LISTINGS_CC))
listings_texfiles :=		\
	$(listings_c_texfiles)	\
	$(listings_cc_texfiles)	\

# generate listings style
highlight.sty:
	$(PYGMENTIZE) -f latex -S $(PYGMENTS_STYLE) $(PYGMENTS_VERB_OPTS) > highlight.sty

# use pygments (http://pygments.org) to generate fancy syntax-highlighted source

# C source files (force using the 'c' lexer)
$(listings_c_texfiles) : %.tex : % %.o
	$(PYGMENTIZE) -f latex $(PYGMENTS_OPTS) -o $@ -l c $<

# C++ source files (force using the 'c++' lexer)
$(listings_cc_texfiles) : %.tex : % %.o
	$(PYGMENTIZE) -f latex $(PYGMENTS_OPTS) -o $@ -l c++ $<

# full listings target
listings: highlight.sty $(listings_texfiles)

# clean listings
#$(RM) $(listings_texfiles)
clean-listings: clean-listings-check
	$(RM) highlight.sty
	$(RM) listings/*.tex
	$(RM) tutorials/*.tex

##
## LIB
##

lib_objects	= $(addsuffix .o,$(lib_sources))

$(lib_objects) : %.o : % $(headers)
	$(CC) $(CFLAGS) -c $< -o $@

lib: $(lib_objects)

clean-lib:
	$(RM) lib/*.o

##
## FIGURES
##

# auto-generated figures, target collection variables
figures_generated :=
figures_extra_clean :=

# included makefile for figures
include figures.mk

# full figures target
figures: $(figures_generated)

# clean figures target (all supplemental files)
clean-figures-gen:
	$(RM) figures.gen/*.eps
	$(RM) figures.gen/*.dat
	$(RM) figures.gen/*.gnu
	$(RM) figures.gen/*.pdf

clean-figures-pgf:
	$(RM) figures.pgf/*.aux
	$(RM) figures.pgf/*.dat
	$(RM) figures.pgf/*.log
	$(RM) figures.pgf/*.pdf

clean-figures-progs:
	$(RM) $(figures_extra_clean)

clean-figures: clean-figures-gen clean-figures-pgf clean-figures-progs

##
## TUTORIALS
##

tutorial_progs :=					\
	tutorials/pll_init_tutorial			\
	tutorials/pll_basic_tutorial			\
	tutorials/pll_tutorial				\
							\
	tutorials/modem_tutorial			\
							\
	tutorials/fec_tutorial				\
	tutorials/fec_init_tutorial			\
	tutorials/fec_basic_tutorial			\
	tutorials/fec_extra_tutorial			\
							\
	tutorials/framing_init_tutorial			\
	tutorials/framing_basic_tutorial		\
	tutorials/framing_intermediate_tutorial		\
	tutorials/framing_tutorial			\
							\
	tutorials/ofdmflexframe_init_tutorial		\
	tutorials/ofdmflexframe_basic_tutorial		\
	tutorials/ofdmflexframe_intermediate_tutorial	\
	tutorials/ofdmflexframe_advanced_tutorial	\

# build tutorial programs
$(tutorial_progs) : % : %.c $(lib_objects) libliquid.a

# run tutorials, storing output
tutorial_output = $(patsubst %,%.out,$(tutorial_progs))
$(tutorial_output) : %.out : %
	./$< > $@

tutorials : $(tutorial_progs) $(tutorial_output)

clean-tutorials :
	$(RM) $(tutorial_progs)
	$(RM) tutorials/*.out


##
## PDF DOCUMENT
##

# version file
src/liquid_version : % : %.c
latex.gen/liquid_version.tex : src/liquid_version ; ./$< > $@
extra_clean += liquid.gen/liquid_version.tex

# auxillary
liquid.aux liquid.bib.aux : liquid.tex highlight.sty $(GRAPHICS) $(SECTIONS) $(listings_texfiles) highlight.sty $(figures_generated) latex.gen/liquid_version.tex
	$(TEX) $(TEX_FLAGS) liquid
	touch liquid.bib.aux

# bibliography
liquid.bbl : liquid.bib liquid.bib.aux
	$(BIB) $(BIB_FLAGS) liquid

# main project file (.pdf)
liquid.pdf: liquid.tex liquid.bbl listings $(SECTIONS)
	$(TEX) $(TEX_FLAGS) liquid
	$(TEX) $(TEX_FLAGS) liquid

clean-tex:
	$(RM) *.ps *.dvi *.aux *.toc *.idx *.ind *.ilg *.log *.out *.bbl *.blg
	$(RM) liquid.pdf


##
## HTML DOCUMENTATION [EXPERIMENTAL]
##

# html directories
html/fig/.touch: ; mkdir -p html/fig && touch html/fig/.touch
html/eqn/.touch: ; mkdir -p html/eqn && touch html/eqn/.touch
html-dirs := html/fig/.touch html/eqn/.touch

# html figures
html_figures = $(patsubst %.pdf,%.png,$(figures_generated))
$(html_figures) : %.png : %.pdf
	convert $< $@
	cp $@ html/fig/

# html generator program
src/doc-html-gen : src/doc-html-gen.c $(lib_objects) libliquid.a

# html index file, equations makefile
html/index.html		\
html/eqn/equations.tex	\
html/fig/figures.tex	: src/doc-html-gen liquid.tex $(html-dirs)
	#./$< -i scripts/htmlgen_test.tex
	./$< -i liquid.tex

# generate equations
html-equations : html/eqn/.equations $(html-dirs)

html/eqn/.equations : html/eqn/equations.tex $(html-dirs)
	latex -interaction=batchmode -output-format=dvi -output-directory=html/eqn html/eqn/equations.tex
	dvipng -q -T tight -x1200 -z 9 -bg Transparent -o html/eqn/eqn%d.png html/eqn/equations.dvi
	touch html/eqn/.equations

# generate figures
html-figures : html/fig/.figures $(html-dirs)

html/fig/.figures : html/fig/figures.tex $(html-dirs)
	latex -interaction=batchmode -output-format=dvi -output-directory=html/fig html/fig/figures.tex
	dvipng -q -T tight -x1200 -z 9 -bg Transparent -o html/fig/fig%d.png html/fig/figures.dvi
	touch html/fig/.figures

# html main target TODO : add $(html_figures) as dependency
html: html/index.html html-equations html-figures

# clean html files
clean-html:
	$(RM) src/doc-html-gen
	$(RM) -r html

##
## OTHER
##


# clean main documents
clean: clean-tex

# clean up nearly everything
mostlyclean: clean-tex clean-figures clean-lib clean-listings clean-html
	$(RM) $(extra_clean)
	$(RM) -r src/*.dSYM

# remove everything except the originally distributed files
distclean: clean-tex clean-figures clean-lib clean-listings clean-html
	$(RM) $(extra_clean)
	$(RM) *.m .DS_Store
	$(RM) -r src/*.dSYM autom4te.cache
	$(RM) configure config.status config.log
	$(RM) makefile

